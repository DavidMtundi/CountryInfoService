// <auto-generated />
using CountryInfoService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CountryInfoService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250312065116_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CountryInfoService.Models.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CapitalCity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContinentCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CountryFlag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CurrencyISOCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ISOCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CapitalCity = "",
                            ContinentCode = "",
                            CountryFlag = "",
                            CurrencyISOCode = "",
                            ISOCode = "XX",
                            Name = "Sample",
                            PhoneCode = ""
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
